{"ast":null,"code":"// custom validator to check that two fields match\nexport function MustMatch(controlName, matchingControlName) {\n  return formGroup => {\n    const passwordControl = formGroup.get(controlName);\n    const confirmPasswordControl = formGroup.get(matchingControlName);\n    if (!passwordControl || !confirmPasswordControl) {\n      return null;\n    }\n    if (confirmPasswordControl.errors && !confirmPasswordControl.errors['passwordMismatch']) {\n      return null;\n    }\n    if (passwordControl.value !== confirmPasswordControl.value) {\n      confirmPasswordControl.setErrors({\n        passwordMismatch: true\n      });\n      return {\n        passwordMismatch: true\n      };\n    } else {\n      confirmPasswordControl.setErrors(null);\n      return null;\n    }\n  };\n}","map":{"version":3,"mappings":"AAEA;AACA,OAAM,SAAUA,SAAS,CAACC,WAAmB,EAAEC,mBAA2B;EACtE,OAAQC,SAA0B,IAA6B;IAC3D,MAAMC,eAAe,GAAGD,SAAS,CAACE,GAAG,CAACJ,WAAW,CAAC;IAClD,MAAMK,sBAAsB,GAAGH,SAAS,CAACE,GAAG,CAACH,mBAAmB,CAAC;IAEjE,IAAI,CAACE,eAAe,IAAI,CAACE,sBAAsB,EAAE;MAC/C,OAAO,IAAI;;IAGb,IACEA,sBAAsB,CAACC,MAAM,IAC7B,CAACD,sBAAsB,CAACC,MAAM,CAAC,kBAAkB,CAAC,EAClD;MACA,OAAO,IAAI;;IAGb,IAAIH,eAAe,CAACI,KAAK,KAAKF,sBAAsB,CAACE,KAAK,EAAE;MAC1DF,sBAAsB,CAACG,SAAS,CAAC;QAAEC,gBAAgB,EAAE;MAAI,CAAE,CAAC;MAC5D,OAAO;QAAEA,gBAAgB,EAAE;MAAI,CAAE;KAClC,MAAM;MACLJ,sBAAsB,CAACG,SAAS,CAAC,IAAI,CAAC;MACtC,OAAO,IAAI;;EAEf,CAAC;AACL","names":["MustMatch","controlName","matchingControlName","formGroup","passwordControl","get","confirmPasswordControl","errors","value","setErrors","passwordMismatch"],"sourceRoot":"","sources":["C:\\Users\\SoundIt\\Desktop\\Development\\unighana-test\\frontend\\src\\app\\components\\modals\\register\\MustMatch.ts"],"sourcesContent":["import { AbstractControl, FormGroup, ValidationErrors } from '@angular/forms';\r\n\r\n// custom validator to check that two fields match\r\nexport function MustMatch(controlName: string, matchingControlName: string) {\r\n    return (formGroup: AbstractControl): ValidationErrors | null => {\r\n        const passwordControl = formGroup.get(controlName);\r\n        const confirmPasswordControl = formGroup.get(matchingControlName);\r\n  \r\n        if (!passwordControl || !confirmPasswordControl) {\r\n          return null;\r\n        }\r\n  \r\n        if (\r\n          confirmPasswordControl.errors &&\r\n          !confirmPasswordControl.errors['passwordMismatch']\r\n        ) {\r\n          return null;\r\n        }\r\n  \r\n        if (passwordControl.value !== confirmPasswordControl.value) {\r\n          confirmPasswordControl.setErrors({ passwordMismatch: true });\r\n          return { passwordMismatch: true };\r\n        } else {\r\n          confirmPasswordControl.setErrors(null);\r\n          return null;\r\n        }\r\n      };\r\n  }"]},"metadata":{},"sourceType":"module","externalDependencies":[]}