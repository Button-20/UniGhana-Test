{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/SoundIt/Desktop/Development/unighana-test/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth.service\";\nexport class AuthInterceptorService {\n  constructor(authService) {\n    this.authService = authService;\n  }\n  intercept(request, next) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const token = _this.authService.getAccessToken();\n      if (token) {\n        request = request.clone({\n          setHeaders: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n      }\n      return next.handle(request);\n    })();\n  }\n}\nAuthInterceptorService.ɵfac = function AuthInterceptorService_Factory(t) {\n  return new (t || AuthInterceptorService)(i0.ɵɵinject(i1.AuthService));\n};\nAuthInterceptorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthInterceptorService,\n  factory: AuthInterceptorService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAaA,OAAM,MAAOA,sBAAsB;EACjCC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;EAAgB;EAEzCC,SAAS,CACbC,OAAyB,EACzBC,IAAiB;IAAA;IAAA;MAET,MAAMC,KAAK,GAAG,KAAI,CAACJ,WAAW,CAACK,cAAc,EAAE;MAC/C,IAAID,KAAK,EAAE;QACTF,OAAO,GAAGA,OAAO,CAACI,KAAK,CAAC;UACtBC,UAAU,EAAE;YACVC,aAAa,EAAE,UAAUJ,KAAK;;SAEjC,CAAC;;MAGJ,OAAOD,IAAI,CAACM,MAAM,CAACP,OAAO,CAAC;IAAC;EAEtC;;AAlBWJ,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;SAAtBA,sBAAsB;EAAAY,SAAtBZ,sBAAsB;EAAAa,YAFrB;AAAM","names":["AuthInterceptorService","constructor","authService","intercept","request","next","token","getAccessToken","clone","setHeaders","Authorization","handle","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\SoundIt\\Desktop\\Development\\unighana-test\\frontend\\src\\app\\services\\interceptors\\auth-interceptor.service.ts"],"sourcesContent":["import {\r\n  HttpEvent,\r\n  HttpHandler,\r\n  HttpRequest,\r\n  HttpResponse,\r\n} from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map, Observable } from 'rxjs';\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthInterceptorService {\r\n  constructor(private authService: AuthService) {}\r\n\r\n  async intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Promise<Observable<HttpEvent<any>>> {\r\n            const token = this.authService.getAccessToken();\r\n            if (token) {\r\n              request = request.clone({\r\n                setHeaders: {\r\n                  Authorization: `Bearer ${token}`,\r\n                },\r\n              });\r\n            }\r\n\r\n            return next.handle(request);\r\n\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}