{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/SoundIt/Desktop/Development/unighana-test/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ngx-toastr\";\nexport class AuthService {\n  constructor(http, toastr) {\n    this.http = http;\n    this.toastr = toastr;\n    this.BaseURL = 'http://localhost:4000/api/';\n  }\n  login(user) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      return yield new Promise( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (resolve, reject) {\n          try {\n            _this.http.post(_this.BaseURL + 'login', user).subscribe(response => {\n              if (response.message) {\n                _this.toastr.success(response.message);\n                localStorage.setItem('token', response.token);\n              }\n              resolve(response);\n            }, error => {\n              _this.toastr.error(error.error.message);\n              reject(error);\n            });\n          } catch (error) {\n            reject(error);\n          }\n        });\n        return function (_x, _x2) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    })();\n  }\n  register(user) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      return yield new Promise( /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator(function* (resolve, reject) {\n          try {\n            _this2.http.post(_this2.BaseURL + 'register', user).subscribe(response => {\n              if (response.message) {\n                _this2.toastr.success(response.message);\n              }\n              resolve(response);\n            }, error => {\n              _this2.toastr.error(error.error.message);\n              reject(error);\n            });\n          } catch (error) {\n            reject(error);\n          }\n        });\n        return function (_x3, _x4) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    })();\n  }\n  getUser(user) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      return yield new Promise( /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator(function* (resolve, reject) {\n          try {\n            _this3.http.post(_this3.BaseURL + 'getUser', user).subscribe(response => {\n              resolve(response);\n            }, error => {\n              _this3.toastr.error(error.error.message);\n              reject(error);\n            });\n          } catch (error) {\n            reject(error);\n          }\n        });\n        return function (_x5, _x6) {\n          return _ref3.apply(this, arguments);\n        };\n      }());\n    })();\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ToastrService));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;;AAQA,OAAM,MAAOA,WAAW;EAGtBC,YAAoBC,IAAgB,EAAUC,MAAqB;IAA/C,SAAI,GAAJD,IAAI;IAAsB,WAAM,GAANC,MAAM;IAFpD,YAAO,GAAG,4BAA4B;EAEgC;EAEhEC,KAAK,CAACC,IAAU;IAAA;IAAA;MACpB,aAAa,IAAIC,OAAO;QAAA,6BAAC,WAAOC,OAAO,EAAEC,MAAM,EAAI;UACjD,IAAI;YACF,KAAI,CAACN,IAAI,CAACO,IAAI,CAAC,KAAI,CAACC,OAAO,GAAG,OAAO,EAAEL,IAAI,CAAC,CAACM,SAAS,CACnDC,QAAa,IAAI;cAChB,IAAIA,QAAQ,CAACC,OAAO,EAAE;gBACpB,KAAI,CAACV,MAAM,CAACW,OAAO,CAACF,QAAQ,CAACC,OAAO,CAAC;gBACrCE,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,QAAQ,CAACK,KAAK,CAAC;;cAG/CV,OAAO,CAACK,QAAQ,CAAC;YACnB,CAAC,EACAM,KAAK,IAAI;cACR,KAAI,CAACf,MAAM,CAACe,KAAK,CAACA,KAAK,CAACA,KAAK,CAACL,OAAO,CAAC;cACtCL,MAAM,CAACU,KAAK,CAAC;YACf,CAAC,CACF;WACF,CAAC,OAAOA,KAAK,EAAE;YACdV,MAAM,CAACU,KAAK,CAAC;;QAEjB,CAAC;QAAA;UAAA;QAAA;MAAA,IAAC;IAAC;EACL;EAEMC,QAAQ,CAACd,IAAU;IAAA;IAAA;MACvB,aAAa,IAAIC,OAAO;QAAA,8BAAC,WAAOC,OAAO,EAAEC,MAAM,EAAI;UACjD,IAAI;YACF,MAAI,CAACN,IAAI,CAACO,IAAI,CAAC,MAAI,CAACC,OAAO,GAAG,UAAU,EAAEL,IAAI,CAAC,CAACM,SAAS,CACtDC,QAAa,IAAI;cAChB,IAAIA,QAAQ,CAACC,OAAO,EAAE;gBACpB,MAAI,CAACV,MAAM,CAACW,OAAO,CAACF,QAAQ,CAACC,OAAO,CAAC;;cAEvCN,OAAO,CAACK,QAAQ,CAAC;YACnB,CAAC,EACAM,KAAK,IAAI;cACR,MAAI,CAACf,MAAM,CAACe,KAAK,CAACA,KAAK,CAACA,KAAK,CAACL,OAAO,CAAC;cACtCL,MAAM,CAACU,KAAK,CAAC;YACf,CAAC,CACF;WACF,CAAC,OAAOA,KAAK,EAAE;YACdV,MAAM,CAACU,KAAK,CAAC;;QAEjB,CAAC;QAAA;UAAA;QAAA;MAAA,IAAC;IAAC;EACL;EAEME,OAAO,CAACf,IAAU;IAAA;IAAA;MACtB,aAAa,IAAIC,OAAO;QAAA,8BAAC,WAAOC,OAAO,EAAEC,MAAM,EAAI;UACjD,IAAI;YACF,MAAI,CAACN,IAAI,CAACO,IAAI,CAAC,MAAI,CAACC,OAAO,GAAG,SAAS,EAAEL,IAAI,CAAC,CAACM,SAAS,CACrDC,QAAa,IAAI;cAChBL,OAAO,CAACK,QAAQ,CAAC;YACnB,CAAC,EACAM,KAAK,IAAI;cACR,MAAI,CAACf,MAAM,CAACe,KAAK,CAACA,KAAK,CAACA,KAAK,CAACL,OAAO,CAAC;cACtCL,MAAM,CAACU,KAAK,CAAC;YACf,CAAC,CACF;WACF,CAAC,OAAOA,KAAK,EAAE;YACdV,MAAM,CAACU,KAAK,CAAC;;QAEjB,CAAC;QAAA;UAAA;QAAA;MAAA,IAAC;IAAC;EACL;;AAjEWlB,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAqB,SAAXrB,WAAW;EAAAsB,YAFV;AAAM","names":["AuthService","constructor","http","toastr","login","user","Promise","resolve","reject","post","BaseURL","subscribe","response","message","success","localStorage","setItem","token","error","register","getUser","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\SoundIt\\Desktop\\Development\\unighana-test\\frontend\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { User } from '../interfaces/user';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  BaseURL = 'http://localhost:4000/api/';\n\n  constructor(private http: HttpClient, private toastr: ToastrService) {}\n\n  async login(user: User) {\n    return await new Promise(async (resolve, reject) => {\n      try {\n        this.http.post(this.BaseURL + 'login', user).subscribe(\n          (response: any) => {\n            if (response.message) {\n              this.toastr.success(response.message);\n              localStorage.setItem('token', response.token);\n            }\n\n            resolve(response);\n          },\n          (error) => {\n            this.toastr.error(error.error.message);\n            reject(error);\n          }\n        );\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  async register(user: User) {\n    return await new Promise(async (resolve, reject) => {\n      try {\n        this.http.post(this.BaseURL + 'register', user).subscribe(\n          (response: any) => {\n            if (response.message) {\n              this.toastr.success(response.message);\n            }\n            resolve(response);\n          },\n          (error) => {\n            this.toastr.error(error.error.message);\n            reject(error);\n          }\n        );\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  async getUser(user: User) {\n    return await new Promise(async (resolve, reject) => {\n      try {\n        this.http.post(this.BaseURL + 'getUser', user).subscribe(\n          (response: any) => {\n            resolve(response);\n          },\n          (error) => {\n            this.toastr.error(error.error.message);\n            reject(error);\n          }\n        );\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}