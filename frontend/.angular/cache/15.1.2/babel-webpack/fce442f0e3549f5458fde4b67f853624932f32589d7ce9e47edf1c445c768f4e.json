{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MustMatch } from './MustMatch';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/auth.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction RegisterComponent_small_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 18);\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_small_18_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_small_18_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Password must be at least 8 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_small_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 18);\n    i0.ɵɵtemplate(1, RegisterComponent_small_18_span_1_Template, 2, 0, \"span\", 19);\n    i0.ɵɵtemplate(2, RegisterComponent_small_18_span_2_Template, 2, 0, \"span\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.password.errors == null ? null : ctx_r1.password.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.password.errors == null ? null : ctx_r1.password.errors[\"minlength\"]);\n  }\n}\nfunction RegisterComponent_small_23_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Confirm Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_small_23_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Confirm Password must be at least 8 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_small_23_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Confirm Password must be the same as Password\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_small_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 18);\n    i0.ɵɵtemplate(1, RegisterComponent_small_23_span_1_Template, 2, 0, \"span\", 19);\n    i0.ɵɵtemplate(2, RegisterComponent_small_23_span_2_Template, 2, 0, \"span\", 19);\n    i0.ɵɵtemplate(3, RegisterComponent_small_23_span_3_Template, 2, 0, \"span\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.confirmPassword.errors == null ? null : ctx_r2.confirmPassword.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.confirmPassword.errors == null ? null : ctx_r2.confirmPassword.errors[\"minlength\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.confirmPassword.errors == null ? null : ctx_r2.confirmPassword.errors[\"notSame\"]);\n  }\n}\nexport class RegisterComponent {\n  constructor(authService) {\n    this.authService = authService;\n    this.user = {\n      email: '',\n      password: '',\n      _id: '',\n      username: '',\n      createdAt: '',\n      updatedAt: ''\n    };\n    this.registerForm = new FormGroup({\n      username: new FormControl('', [Validators.required]),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required, Validators.minLength(8)]),\n      confirmPassword: new FormControl('', [Validators.required, Validators.minLength(8)])\n    }, {\n      validators: MustMatch('password', 'rpassword')\n    });\n  }\n  onSubmit() {\n    this.user = this.registerForm.value;\n    this.authService.register(this.user);\n  }\n  get username() {\n    return this.registerForm.get('username');\n  }\n  get email() {\n    return this.registerForm.get('email');\n  }\n  get password() {\n    return this.registerForm.get('password');\n  }\n  get confirmPassword() {\n    return this.registerForm.get('confirmPassword');\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"register\"]],\n  decls: 29,\n  vars: 5,\n  consts: [[\"id\", \"registerModal\", \"tabindex\", \"-1\", \"aria-labelledby\", \"registerModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\", \"modal-dialog-centered\"], [1, \"modal-content\"], [\"novalidate\", \"\", 1, \"needs-validation\", 3, \"formGroup\", \"ngSubmit\"], [1, \"modal-header\"], [\"id\", \"registerModalLabel\", 1, \"modal-title\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn-close\"], [1, \"modal-body\"], [1, \"mb-3\"], [\"for\", \"email\"], [\"type\", \"email\", \"placeholder\", \"\", \"formControlName\", \"email\", \"name\", \"email\", \"required\", \"\", 1, \"form-control\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"for\", \"password\"], [\"type\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"\", \"name\", \"password\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"password\", \"id\", \"confirmpassword\", \"placeholder\", \"\", \"formControlName\", \"confirmPassword\", \"name\", \"confirmPassword\", \"required\", \"\", 1, \"form-control\"], [1, \"modal-footer\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"actionBtn\", \"btn-secondary\"], [\"type\", \"button\", 1, \"actionBtn\", 3, \"disabled\"], [1, \"text-danger\"], [4, \"ngIf\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(4, \"div\", 4)(5, \"h5\", 5);\n      i0.ɵɵtext(6, \"Register form\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"button\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 7)(9, \"div\", 8)(10, \"label\", 9);\n      i0.ɵɵtext(11, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 10);\n      i0.ɵɵtemplate(13, RegisterComponent_small_13_Template, 2, 0, \"small\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 8)(15, \"label\", 12);\n      i0.ɵɵtext(16, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"input\", 13);\n      i0.ɵɵtemplate(18, RegisterComponent_small_18_Template, 3, 2, \"small\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 8)(20, \"label\", 12);\n      i0.ɵɵtext(21, \"Confirm Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"input\", 14);\n      i0.ɵɵtemplate(23, RegisterComponent_small_23_Template, 4, 3, \"small\", 11);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(24, \"div\", 15)(25, \"button\", 16);\n      i0.ɵɵtext(26, \" Close \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"button\", 17);\n      i0.ɵɵtext(28, \" Register \");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngIf\", (ctx.email == null ? null : ctx.email.invalid) && ((ctx.email == null ? null : ctx.email.dirty) || (ctx.email == null ? null : ctx.email.touched)));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.password.invalid && (ctx.password.dirty || ctx.password.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.confirmPassword.invalid && (ctx.confirmPassword.dirty || ctx.confirmPassword.touched));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"disabled\", ctx.registerForm.invalid);\n    }\n  },\n  dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\".actionBtn[_ngcontent-%COMP%] {\\n  margin-top: 1em;\\n  color: #fff;\\n  background: #0d6be8;\\n  border: 1px solid #0d6be8;\\n  border-radius: 4px;\\n  padding: 10px 20px;\\n  font-size: 1rem;\\n  font-weight: 600;\\n  outline: none;\\n  text-decoration: none;\\n  transition: all 0.2s ease-in-out;\\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\\n  cursor: pointer;\\n}\\n.actionBtn[_ngcontent-%COMP%]:hover {\\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.4);\\n}\\n.actionBtn[_ngcontent-%COMP%]:active {\\n  scale: 0.9;\\n}\\n.actionBtn[_ngcontent-%COMP%]:disabled {\\n  background: #ccc;\\n  color: #fff;\\n  border: 1px solid #ccc;\\n  cursor: not-allowed;\\n}\\n.actionBtn[_ngcontent-%COMP%]:disabled:hover {\\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\\n}\\n.actionBtn[_ngcontent-%COMP%]:disabled:active {\\n  scale: 1;\\n}\\n.actionBtn.btn-secondary[_ngcontent-%COMP%] {\\n  background: #444444;\\n  color: #fff;\\n  border: 1px solid #444444;\\n}\\n\\n.form-control[_ngcontent-%COMP%]:focus {\\n  box-shadow: none;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9tb2RhbHMvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFBO0VBQ0EsV0FBQTtFQUNBLG1CQUFBO0VBQ0EseUJBQUE7RUFDQSxrQkFBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtFQUNBLGdCQUFBO0VBQ0EsYUFBQTtFQUNBLHFCQUFBO0VBQ0EsZ0NBQUE7RUFDQSx1Q0FBQTtFQUNBLGVBQUE7QUFDRjtBQUNFO0VBQ0UsdUNBQUE7QUFDSjtBQUVFO0VBQ0UsVUFBQTtBQUFKO0FBR0U7RUFDRSxnQkFBQTtFQUNBLFdBQUE7RUFDQSxzQkFBQTtFQUNBLG1CQUFBO0FBREo7QUFHSTtFQUNFLHVDQUFBO0FBRE47QUFJSTtFQUNFLFFBQUE7QUFGTjtBQU1FO0VBQ0UsbUJBQUE7RUFDQSxXQUFBO0VBQ0EseUJBQUE7QUFKSjs7QUFRQTtFQUNFLGdCQUFBO0FBTEYiLCJzb3VyY2VzQ29udGVudCI6WyIuYWN0aW9uQnRuIHtcclxuICBtYXJnaW4tdG9wOiAxZW07XHJcbiAgY29sb3I6ICNmZmY7XHJcbiAgYmFja2dyb3VuZDogIzBkNmJlODtcclxuICBib3JkZXI6IDFweCBzb2xpZCAjMGQ2YmU4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICBwYWRkaW5nOiAxMHB4IDIwcHg7XHJcbiAgZm9udC1zaXplOiAxcmVtO1xyXG4gIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgb3V0bGluZTogbm9uZTtcclxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnMgZWFzZS1pbi1vdXQ7XHJcbiAgYm94LXNoYWRvdzogMCAwIDEwcHggcmdiYSgwLCAwLCAwLCAwLjIpO1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuXHJcbiAgJjpob3ZlciB7XHJcbiAgICBib3gtc2hhZG93OiAwIDAgMTBweCByZ2JhKDAsIDAsIDAsIDAuNCk7XHJcbiAgfVxyXG5cclxuICAmOmFjdGl2ZSB7XHJcbiAgICBzY2FsZTogMC45O1xyXG4gIH1cclxuXHJcbiAgJjpkaXNhYmxlZCB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjY2NjO1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gICAgY3Vyc29yOiBub3QtYWxsb3dlZDtcclxuXHJcbiAgICAmOmhvdmVyIHtcclxuICAgICAgYm94LXNoYWRvdzogMCAwIDEwcHggcmdiYSgwLCAwLCAwLCAwLjIpO1xyXG4gICAgfVxyXG5cclxuICAgICY6YWN0aXZlIHtcclxuICAgICAgc2NhbGU6IDE7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAmLmJ0bi1zZWNvbmRhcnkge1xyXG4gICAgYmFja2dyb3VuZDogIzQ0NDQ0NDtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgIzQ0NDQ0NDtcclxuICB9XHJcbn1cclxuXHJcbi5mb3JtLWNvbnRyb2w6Zm9jdXMge1xyXG4gIGJveC1zaGFkb3c6IG5vbmU7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","MustMatch","i0","RegisterComponent","constructor","authService","email","password","_id","username","createdAt","updatedAt","required","minLength","confirmPassword","validators","onSubmit","user","registerForm","value","register","get","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\SoundIt\\Desktop\\Development\\unighana-test\\frontend\\src\\app\\components\\modals\\register\\register.component.ts","C:\\Users\\SoundIt\\Desktop\\Development\\unighana-test\\frontend\\src\\app\\components\\modals\\register\\register.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport {\n  AbstractControlOptions,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { User } from 'src/app/interfaces/user';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { MustMatch } from './MustMatch';\n\n@Component({\n  selector: 'register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n})\nexport class RegisterComponent {\n  user: User = {\n    email: '',\n    password: '',\n    _id: '',\n    username: '',\n    createdAt: '',\n    updatedAt: '',\n  };\n\n  registerForm: FormGroup = new FormGroup(\n    {\n      username: new FormControl('', [Validators.required]),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [\n        Validators.required,\n        Validators.minLength(8),\n      ]),\n      confirmPassword: new FormControl('', [\n        Validators.required,\n        Validators.minLength(8),\n      ]),\n    },\n    {\n      validators: MustMatch('password', 'rpassword'),\n    }\n  );\n\n  constructor(private authService: AuthService) {}\n\n  onSubmit() {\n    this.user = this.registerForm.value;\n    this.authService.register(this.user);\n  }\n\n  get username() {\n    return this.registerForm.get('username') as FormControl;\n  }\n\n  get email() {\n    return this.registerForm.get('email');\n  }\n\n  get password() {\n    return this.registerForm.get('password') as FormControl;\n  }\n\n  get confirmPassword() {\n    return this.registerForm.get('confirmPassword') as FormControl;\n  }\n\n}\n","<!-- Modal -->\n<div\n  class=\"modal fade\"\n  id=\"registerModal\"\n  tabindex=\"-1\"\n  aria-labelledby=\"registerModalLabel\"\n  aria-hidden=\"true\"\n>\n  <div class=\"modal-dialog modal-dialog-centered\">\n    <div class=\"modal-content\">\n      <form\n        [formGroup]=\"registerForm\"\n        (ngSubmit)=\"onSubmit()\"\n        class=\"needs-validation\"\n        novalidate\n      >\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"registerModalLabel\">Register form</h5>\n          <button\n            type=\"button\"\n            class=\"btn-close\"\n            data-bs-dismiss=\"modal\"\n            aria-label=\"Close\"\n          ></button>\n        </div>\n        <div class=\"modal-body\">\n          <div class=\"mb-3\">\n            <label for=\"email\">Email</label>\n            <input\n              type=\"email\"\n              class=\"form-control\"\n              placeholder=\"\"\n              formControlName=\"email\"\n              name=\"email\"\n              required\n            />\n            <small\n              *ngIf=\"email?.invalid && (email?.dirty || email?.touched)\"\n              class=\"text-danger\"\n              >Email is required</small\n            >\n          </div>\n\n          <div class=\"mb-3\">\n            <label for=\"password\">Password</label>\n            <input\n              type=\"password\"\n              class=\"form-control\"\n              formControlName=\"password\"\n              placeholder=\"\"\n              name=\"password\"\n              required\n            />\n            <small\n              *ngIf=\"password.invalid && (password.dirty || password.touched)\"\n              class=\"text-danger\"\n            >\n              <span *ngIf=\"password.errors?.['required']\"\n                >Password is required</span\n              >\n              <span *ngIf=\"password.errors?.['minlength']\"\n                >Password must be at least 8 characters</span\n              >\n            </small>\n          </div>\n\n          <div class=\"mb-3\">\n            <label for=\"password\">Confirm Password</label>\n            <input\n              type=\"password\"\n              class=\"form-control\"\n              id=\"confirmpassword\"\n              placeholder=\"\"\n              formControlName=\"confirmPassword\"\n              name=\"confirmPassword\"\n              required\n            />\n            <small\n              *ngIf=\"\n                confirmPassword.invalid &&\n                (confirmPassword.dirty || confirmPassword.touched)\n              \"\n              class=\"text-danger\"\n            >\n              <span *ngIf=\"confirmPassword.errors?.['required']\"\n                >Confirm Password is required</span\n              >\n              <span *ngIf=\"confirmPassword.errors?.['minlength']\"\n                >Confirm Password must be at least 8 characters</span\n              >\n              <span *ngIf=\"confirmPassword.errors?.['notSame']\"\n                >Confirm Password must be the same as Password</span\n              >\n            </small>\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"actionBtn btn-secondary\"\n            data-bs-dismiss=\"modal\"\n          >\n            Close\n          </button>\n          <button\n            type=\"button\"\n            class=\"actionBtn\"\n            [disabled]=\"registerForm.invalid\"\n          >\n            Register\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}