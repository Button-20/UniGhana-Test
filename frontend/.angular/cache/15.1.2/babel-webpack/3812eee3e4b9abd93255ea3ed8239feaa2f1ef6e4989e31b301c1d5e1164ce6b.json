{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/auth.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction RegisterComponent_small_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_small_18_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_small_18_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Password must be at least 8 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_small_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtemplate(1, RegisterComponent_small_18_span_1_Template, 2, 0, \"span\", 11);\n    i0.ɵɵtemplate(2, RegisterComponent_small_18_span_2_Template, 2, 0, \"span\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.password.errors == null ? null : ctx_r1.password.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.password.errors == null ? null : ctx_r1.password.errors[\"minlength\"]);\n  }\n}\nfunction RegisterComponent_small_23_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_small_23_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Password must be at least 8 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_small_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtemplate(1, RegisterComponent_small_23_span_1_Template, 2, 0, \"span\", 11);\n    i0.ɵɵtemplate(2, RegisterComponent_small_23_span_2_Template, 2, 0, \"span\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.password.errors == null ? null : ctx_r2.password.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.password.errors == null ? null : ctx_r2.password.errors[\"minlength\"]);\n  }\n}\nexport class RegisterComponent {\n  constructor(authService) {\n    this.authService = authService;\n    this.registerForm = new FormGroup({\n      username: new FormControl('', [Validators.required]),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required, Validators.minLength(8)]),\n      confirmPassword: new FormControl('', [Validators.required, Validators.minLength(8)])\n    });\n  }\n  onSubmit() {}\n  get username() {\n    return this.registerForm.get('username');\n  }\n  get email() {\n    return this.registerForm.get('email');\n  }\n  get password() {\n    return this.registerForm.get('password');\n  }\n  get confirmPassword() {\n    return this.registerForm.get('confirmPassword');\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"register\"]],\n  decls: 29,\n  vars: 4,\n  consts: [[\"id\", \"registerModal\", \"tabindex\", \"-1\", \"aria-labelledby\", \"registerModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\", \"modal-dialog-centered\"], [1, \"modal-content\"], [\"novalidate\", \"\", 1, \"needs-validation\", 3, \"formGroup\", \"ngSubmit\"], [1, \"modal-header\"], [\"id\", \"registerModalLabel\", 1, \"modal-title\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn-close\"], [1, \"modal-body\"], [1, \"mb-3\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"placeholder\", \"\", \"name\", \"email\", 1, \"form-control\"], [4, \"ngIf\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"placeholder\", \"\", \"name\", \"password\", 1, \"form-control\"], [1, \"modal-footer\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"actionBtn\", \"btn-secondary\"], [\"type\", \"button\", 1, \"actionBtn\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(4, \"div\", 4)(5, \"h5\", 5);\n      i0.ɵɵtext(6, \"Register form\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"button\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 7)(9, \"div\", 8)(10, \"label\", 9);\n      i0.ɵɵtext(11, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 10);\n      i0.ɵɵtemplate(13, RegisterComponent_small_13_Template, 2, 0, \"small\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 8)(15, \"label\", 12);\n      i0.ɵɵtext(16, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"input\", 13);\n      i0.ɵɵtemplate(18, RegisterComponent_small_18_Template, 3, 2, \"small\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 8)(20, \"label\", 12);\n      i0.ɵɵtext(21, \"Confirm Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"input\", 13);\n      i0.ɵɵtemplate(23, RegisterComponent_small_23_Template, 3, 2, \"small\", 11);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(24, \"div\", 14)(25, \"button\", 15);\n      i0.ɵɵtext(26, \"Close\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"button\", 16);\n      i0.ɵɵtext(28, \"Save changes\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngIf\", ctx.email.invalid && (ctx.email.dirty || ctx.email.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.password.invalid && (ctx.password.dirty || ctx.password.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.password.invalid && (ctx.password.dirty || ctx.password.touched));\n    }\n  },\n  dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective],\n  styles: [\".actionBtn[_ngcontent-%COMP%] {\\n  margin-top: 1em;\\n  color: #fff;\\n  background: #0d6be8;\\n  border: 1px solid #0d6be8;\\n  border-radius: 4px;\\n  padding: 10px 20px;\\n  font-size: 1rem;\\n  font-weight: 600;\\n  outline: none;\\n  text-decoration: none;\\n  transition: all 0.2s ease-in-out;\\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\\n  cursor: pointer;\\n}\\n.actionBtn[_ngcontent-%COMP%]:hover {\\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.4);\\n}\\n.actionBtn[_ngcontent-%COMP%]:active {\\n  scale: 0.9;\\n}\\n.actionBtn.btn-secondary[_ngcontent-%COMP%] {\\n  background: #444444;\\n  color: #fff;\\n  border: 1px solid #444444;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9tb2RhbHMvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFBO0VBQ0EsV0FBQTtFQUNBLG1CQUFBO0VBQ0EseUJBQUE7RUFDQSxrQkFBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtFQUNBLGdCQUFBO0VBQ0EsYUFBQTtFQUNBLHFCQUFBO0VBQ0EsZ0NBQUE7RUFDQSx1Q0FBQTtFQUNBLGVBQUE7QUFDRjtBQUNFO0VBQ0UsdUNBQUE7QUFDSjtBQUVFO0VBQ0UsVUFBQTtBQUFKO0FBR0U7RUFDRSxtQkFBQTtFQUNBLFdBQUE7RUFDQSx5QkFBQTtBQURKIiwic291cmNlc0NvbnRlbnQiOlsiLmFjdGlvbkJ0biB7XHJcbiAgbWFyZ2luLXRvcDogMWVtO1xyXG4gIGNvbG9yOiAjZmZmO1xyXG4gIGJhY2tncm91bmQ6ICMwZDZiZTg7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgIzBkNmJlODtcclxuICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgcGFkZGluZzogMTBweCAyMHB4O1xyXG4gIGZvbnQtc2l6ZTogMXJlbTtcclxuICBmb250LXdlaWdodDogNjAwO1xyXG4gIG91dGxpbmU6IG5vbmU7XHJcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gIHRyYW5zaXRpb246IGFsbCAwLjJzIGVhc2UtaW4tb3V0O1xyXG4gIGJveC1zaGFkb3c6IDAgMCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4yKTtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcblxyXG4gICY6aG92ZXIge1xyXG4gICAgYm94LXNoYWRvdzogMCAwIDEwcHggcmdiYSgwLCAwLCAwLCAwLjQpO1xyXG4gIH1cclxuXHJcbiAgJjphY3RpdmUge1xyXG4gICAgc2NhbGU6IDAuOTtcclxuICB9XHJcblxyXG4gICYuYnRuLXNlY29uZGFyeSB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjNDQ0NDQ0O1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjNDQ0NDQ0O1xyXG4gIH1cclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;;ICuB3DC,6BACG;IAAAA,iCAAiB;IAAAA,iBACnB;;;;;IAaCA,4BACG;IAAAA,oCAAoB;IAAAA,iBACtB;;;;;IACDA,4BACG;IAAAA,sDAAsC;IAAAA,iBACxC;;;;;IANHA,6BAAwE;IACtEA,8EAEC;IACDA,8EAEC;IACHA,iBAAQ;;;;IANCA,eAAmC;IAAnCA,iGAAmC;IAGnCA,eAAoC;IAApCA,kGAAoC;;;;;IAgB3CA,4BACG;IAAAA,oCAAoB;IAAAA,iBACtB;;;;;IACDA,4BACG;IAAAA,sDAAsC;IAAAA,iBACxC;;;;;IANHA,6BAAwE;IACtEA,8EAEC;IACDA,8EAEC;IACHA,iBAAQ;;;;IANCA,eAAmC;IAAnCA,iGAAmC;IAGnCA,eAAoC;IAApCA,kGAAoC;;;ADpDrD,OAAM,MAAOC,iBAAiB;EAgB5BC,YACUC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAdrB,iBAAY,GAAc,IAAIL,SAAS,CAAC;MACtCM,QAAQ,EAAE,IAAIP,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACM,QAAQ,CAAC,CAAC;MACpDC,KAAK,EAAE,IAAIT,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACM,QAAQ,EAAEN,UAAU,CAACO,KAAK,CAAC,CAAC;MACnEC,QAAQ,EAAE,IAAIV,WAAW,CAAC,EAAE,EAAE,CAC5BE,UAAU,CAACM,QAAQ,EACnBN,UAAU,CAACS,SAAS,CAAC,CAAC,CAAC,CACxB,CAAC;MACFC,eAAe,EAAE,IAAIZ,WAAW,CAAC,EAAE,EAAE,CACnCE,UAAU,CAACM,QAAQ,EACnBN,UAAU,CAACS,SAAS,CAAC,CAAC,CAAC,CACxB;KACF,CAAC;EAKC;EAEHE,QAAQ,IAER;EAEA,IAAIN,QAAQ;IACV,OAAO,IAAI,CAACO,YAAY,CAACC,GAAG,CAAC,UAAU,CAAgB;EACzD;EAEA,IAAIN,KAAK;IACP,OAAO,IAAI,CAACK,YAAY,CAACC,GAAG,CAAC,OAAO,CAAgB;EACtD;EAEA,IAAIL,QAAQ;IACV,OAAO,IAAI,CAACI,YAAY,CAACC,GAAG,CAAC,UAAU,CAAgB;EACzD;EAEA,IAAIH,eAAe;IACjB,OAAO,IAAI,CAACE,YAAY,CAACC,GAAG,CAAC,iBAAiB,CAAgB;EAChE;;AAvCWX,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAY;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCR9BjB,8BAAiH;MAKvGA;QAAA,OAAYkB,cAAU;MAAA,EAAC;MAI3BlB,8BAA0B;MACwBA,6BAAa;MAAAA,iBAAK;MAClEA,4BAA4F;MAC9FA,iBAAM;MACNA,8BAAwB;MAEHA,sBAAK;MAAAA,iBAAQ;MAChCA,6BAME;MACFA,yEAEC;MACHA,iBAAM;MAENA,+BAAkB;MACMA,yBAAQ;MAAAA,iBAAQ;MACtCA,6BAME;MACFA,yEAOQ;MACVA,iBAAM;MAENA,+BAAkB;MACMA,iCAAgB;MAAAA,iBAAQ;MAC9CA,6BAME;MACFA,yEAOQ;MACVA,iBAAM;MAERA,gCAA0B;MACwDA,sBAAK;MAAAA,iBAAS;MAC5FA,mCAAwC;MAAAA,6BAAY;MAAAA,iBAAS;;;MAhE3DA,eAA0B;MAA1BA,4CAA0B;MAmBpBA,gBAAqD;MAArDA,kFAAqD;MAcrDA,eAA8D;MAA9DA,2FAA8D;MAmB9DA,eAA8D;MAA9DA,2FAA8D","names":["FormControl","FormGroup","Validators","i0","RegisterComponent","constructor","authService","username","required","email","password","minLength","confirmPassword","onSubmit","registerForm","get","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\SoundIt\\Desktop\\Development\\unighana-test\\frontend\\src\\app\\components\\modals\\register\\register.component.ts","C:\\Users\\SoundIt\\Desktop\\Development\\unighana-test\\frontend\\src\\app\\components\\modals\\register\\register.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n})\nexport class RegisterComponent {\n  user\n\n  registerForm: FormGroup = new FormGroup({\n    username: new FormControl('', [Validators.required]),\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(8),\n    ]),\n    confirmPassword: new FormControl('', [\n      Validators.required,\n      Validators.minLength(8),\n    ]),\n  });\n\n  constructor(\n    private authService: AuthService,\n\n  ) {}\n\n  onSubmit() {\n    \n  }\n\n  get username() {\n    return this.registerForm.get('username') as FormControl;\n  }\n\n  get email() {\n    return this.registerForm.get('email') as FormControl;\n  }\n\n  get password() {\n    return this.registerForm.get('password') as FormControl;\n  }\n\n  get confirmPassword() {\n    return this.registerForm.get('confirmPassword') as FormControl;\n  }\n}\n","<!-- Modal -->\n<div class=\"modal fade\" id=\"registerModal\" tabindex=\"-1\" aria-labelledby=\"registerModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog modal-dialog-centered\">\n    <div class=\"modal-content\">\n        <form\n          [formGroup]=\"registerForm\"\n          (ngSubmit)=\"onSubmit()\"\n          class=\"needs-validation\"\n          novalidate\n        >\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"registerModalLabel\">Register form</h5>\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n      </div>\n      <div class=\"modal-body\">\n      <div class=\"mb-3\">\n        <label for=\"email\">Email</label>\n        <input\n          type=\"email\"\n          class=\"form-control\"\n          id=\"email\"\n          placeholder=\"\"\n          name=\"email\"\n        />\n        <small *ngIf=\"email.invalid && (email.dirty || email.touched)\"\n          >Email is required</small\n        >\n      </div>\n\n      <div class=\"mb-3\">\n        <label for=\"password\">Password</label>\n        <input\n          type=\"password\"\n          class=\"form-control\"\n          id=\"password\"\n          placeholder=\"\"\n          name=\"password\"\n        />\n        <small *ngIf=\"password.invalid && (password.dirty || password.touched)\">\n          <span *ngIf=\"password.errors?.['required']\"\n            >Password is required</span\n          >\n          <span *ngIf=\"password.errors?.['minlength']\"\n            >Password must be at least 8 characters</span\n          >\n        </small>\n      </div>\n\n      <div class=\"mb-3\">\n        <label for=\"password\">Confirm Password</label>\n        <input\n          type=\"password\"\n          class=\"form-control\"\n          id=\"password\"\n          placeholder=\"\"\n          name=\"password\"\n        />\n        <small *ngIf=\"password.invalid && (password.dirty || password.touched)\">\n          <span *ngIf=\"password.errors?.['required']\"\n            >Password is required</span\n          >\n          <span *ngIf=\"password.errors?.['minlength']\"\n            >Password must be at least 8 characters</span\n          >\n        </small>\n      </div>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"actionBtn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n        <button type=\"button\" class=\"actionBtn\">Save changes</button>\n    </div>\n</form>\n    </div>\n  </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}