{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/SoundIt/Desktop/Development/unighana-test/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/auth.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nconst _c0 = [\"closeButton\"];\nfunction LoginComponent_small_14_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_small_14_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Email is invalid\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_small_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 18);\n    i0.ɵɵtemplate(1, LoginComponent_small_14_span_1_Template, 2, 0, \"span\", 19);\n    i0.ɵɵtemplate(2, LoginComponent_small_14_span_2_Template, 2, 0, \"span\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.email.errors == null ? null : ctx_r1.email.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.email.errors == null ? null : ctx_r1.email.errors[\"email\"]);\n  }\n}\nfunction LoginComponent_small_19_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_small_19_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Password must be at least 8 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_small_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 18);\n    i0.ɵɵtemplate(1, LoginComponent_small_19_span_1_Template, 2, 0, \"span\", 19);\n    i0.ɵɵtemplate(2, LoginComponent_small_19_span_2_Template, 2, 0, \"span\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.password.errors == null ? null : ctx_r2.password.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.password.errors == null ? null : ctx_r2.password.errors[\"minlength\"]);\n  }\n}\nexport class LoginComponent {\n  constructor(authService) {\n    this.authService = authService;\n    this.user = {\n      email: '',\n      password: '',\n      _id: '',\n      username: '',\n      createdAt: '',\n      updatedAt: ''\n    };\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required, Validators.minLength(8)])\n    });\n  }\n  onSubmit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.user = _this.loginForm.value;\n      yield _this.authService.login(_this.user);\n      _this.loginForm.reset();\n      _this.closeButton?.nativeElement.click();\n    })();\n  }\n  get email() {\n    return this.loginForm.get('email');\n  }\n  get password() {\n    return this.loginForm.get('password');\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"login\"]],\n  viewQuery: function LoginComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.closeButton = _t.first);\n    }\n  },\n  decls: 25,\n  vars: 4,\n  consts: [[\"id\", \"loginModal\", \"tabindex\", \"-1\", \"aria-labelledby\", \"loginModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\", \"modal-dialog-centered\"], [1, \"modal-content\"], [\"novalidate\", \"\", 1, \"needs-validation\", 3, \"formGroup\", \"ngSubmit\"], [1, \"modal-header\"], [\"id\", \"loginModalLabel\", 1, \"modal-title\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn-close\"], [\"closeButton\", \"\"], [1, \"modal-body\"], [1, \"mb-3\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"\", \"name\", \"email\", \"required\", \"\", 1, \"form-control\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"placeholder\", \"\", \"formControlName\", \"password\", \"name\", \"password\", \"required\", \"\", 1, \"form-control\"], [1, \"modal-footer\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"actionBtn\", \"btn-secondary\"], [\"type\", \"submit\", 1, \"actionBtn\", 3, \"disabled\"], [1, \"text-danger\"], [4, \"ngIf\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(4, \"div\", 4)(5, \"h5\", 5);\n      i0.ɵɵtext(6, \"Log in\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"button\", 6, 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 8)(10, \"div\", 9)(11, \"label\", 10);\n      i0.ɵɵtext(12, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 11);\n      i0.ɵɵtemplate(14, LoginComponent_small_14_Template, 3, 2, \"small\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 9)(16, \"label\", 13);\n      i0.ɵɵtext(17, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"input\", 14);\n      i0.ɵɵtemplate(19, LoginComponent_small_19_Template, 3, 2, \"small\", 12);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"div\", 15)(21, \"button\", 16);\n      i0.ɵɵtext(22, \" Cancel \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"button\", 17);\n      i0.ɵɵtext(24, \" Login \");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngIf\", ctx.email.invalid && (ctx.email.dirty || ctx.email.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.password.invalid && (ctx.password.dirty || ctx.password.touched));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n    }\n  },\n  dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\".actionBtn[_ngcontent-%COMP%] {\\n  margin-top: 1em;\\n  color: #fff;\\n  background: #0d6be8;\\n  border: 1px solid #0d6be8;\\n  border-radius: 4px;\\n  padding: 10px 20px;\\n  font-size: 1rem;\\n  font-weight: 600;\\n  outline: none;\\n  text-decoration: none;\\n  transition: all 0.2s ease-in-out;\\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\\n  cursor: pointer;\\n}\\n.actionBtn[_ngcontent-%COMP%]:hover {\\n  scale: 1.1;\\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.4);\\n}\\n.actionBtn[_ngcontent-%COMP%]:active {\\n  scale: 0.9;\\n}\\n.actionBtn.btn-secondary[_ngcontent-%COMP%] {\\n  background: #444444;\\n  color: #fff;\\n  border: 1px solid #444444;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9tb2RhbHMvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUU7RUFDRSxlQUFBO0VBQ0EsV0FBQTtFQUNBLG1CQUFBO0VBQ0EseUJBQUE7RUFDQSxrQkFBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtFQUNBLGdCQUFBO0VBQ0EsYUFBQTtFQUNBLHFCQUFBO0VBQ0EsZ0NBQUE7RUFDQSx1Q0FBQTtFQUNBLGVBQUE7QUFDSjtBQUNJO0VBQ0UsVUFBQTtFQUNBLHVDQUFBO0FBQ047QUFFSTtFQUNFLFVBQUE7QUFBTjtBQUdNO0VBQ0YsbUJBQUE7RUFDQSxXQUFBO0VBQ0EseUJBQUE7QUFESiIsInNvdXJjZXNDb250ZW50IjpbIiAgLmFjdGlvbkJ0biB7XHJcbiAgICBtYXJnaW4tdG9wOiAxZW07XHJcbiAgICBjb2xvcjogI2ZmZjtcclxuICAgIGJhY2tncm91bmQ6ICMwZDZiZTg7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjMGQ2YmU4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gICAgcGFkZGluZzogMTBweCAyMHB4O1xyXG4gICAgZm9udC1zaXplOiAxcmVtO1xyXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlLWluLW91dDtcclxuICAgIGJveC1zaGFkb3c6IDAgMCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4yKTtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuXHJcbiAgICAmOmhvdmVyIHtcclxuICAgICAgc2NhbGU6IDEuMTtcclxuICAgICAgYm94LXNoYWRvdzogMCAwIDEwcHggcmdiYSgwLCAwLCAwLCAwLjQpO1xyXG4gICAgfVxyXG5cclxuICAgICY6YWN0aXZlIHtcclxuICAgICAgc2NhbGU6IDAuOTtcclxuICAgIH1cclxuXHJcbiAgICAgICYuYnRuLXNlY29uZGFyeSB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjNDQ0NDQ0O1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjNDQ0NDQ0O1xyXG4gIH1cclxuXHJcbiAgfVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;;;IC0CrDC,4BAAyC;IAAAA,iCAAiB;IAAAA,iBAAO;;;;;IACjEA,4BAAsC;IAAAA,gCAAgB;IAAAA,iBAAO;;;;;IAL/DA,iCAGC;IACCA,2EAAiE;IACjEA,2EAA6D;IAC/DA,iBAAQ;;;;IAFCA,eAAgC;IAAhCA,2FAAgC;IAChCA,eAA6B;IAA7BA,wFAA6B;;;;;IAkBpCA,4BACG;IAAAA,oCAAoB;IAAAA,iBACtB;;;;;IACDA,4BACG;IAAAA,sDAAsC;IAAAA,iBACxC;;;;;IATHA,iCAGC;IACCA,2EAEC;IACDA,2EAEC;IACHA,iBAAQ;;;;IANCA,eAAmC;IAAnCA,iGAAmC;IAGnCA,eAAoC;IAApCA,kGAAoC;;;ADvDzD,OAAM,MAAOC,cAAc;EAoBzBC,YACUC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IApBrB,SAAI,GAAS;MACXC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,GAAG,EAAE,EAAE;MACPC,QAAQ,EAAE,EAAE;MACZC,SAAS,EAAE,EAAE;MACbC,SAAS,EAAE;KACZ;IAED,cAAS,GAAc,IAAIX,SAAS,CAAC;MACnCM,KAAK,EAAE,IAAIP,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACW,QAAQ,EAAEX,UAAU,CAACK,KAAK,CAAC,CAAC;MACnEC,QAAQ,EAAE,IAAIR,WAAW,CAAC,EAAE,EAAE,CAC5BE,UAAU,CAACW,QAAQ,EACnBX,UAAU,CAACY,SAAS,CAAC,CAAC,CAAC,CACxB;KACF,CAAC;EAMC;EAEGC,QAAQ;IAAA;IAAA;MACZ,KAAI,CAACC,IAAI,GAAG,KAAI,CAACC,SAAS,CAACC,KAAK;MAChC,MAAM,KAAI,CAACZ,WAAW,CAACa,KAAK,CAAC,KAAI,CAACH,IAAI,CAAC;MACvC,KAAI,CAACC,SAAS,CAACG,KAAK,EAAE;MACtB,KAAI,CAACC,WAAW,EAAEC,aAAa,CAACC,KAAK,EAAE;IAAC;EAC1C;EAEA,IAAIhB,KAAK;IACP,OAAO,IAAI,CAACU,SAAS,CAACO,GAAG,CAAC,OAAO,CAAgB;EACnD;EAEA,IAAIhB,QAAQ;IACV,OAAO,IAAI,CAACS,SAAS,CAACO,GAAG,CAAC,UAAU,CAAgB;EACtD;;AArCWpB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAqB;EAAAC;IAAA;;;;;;;;;;;;;MCT3BvB,8BAMC;MAKOA;QAAA,OAAYwB,cAAU;MAAA,EAAC;MAIvBxB,8BAA0B;MACqBA,sBAAM;MAAAA,iBAAK;MACxDA,+BAMU;MACZA,iBAAM;MACNA,8BAAwB;MAEDA,sBAAK;MAAAA,iBAAQ;MAChCA,6BAQE;MAEFA,sEAMQ;MACVA,iBAAM;MACNA,+BAAkB;MACMA,yBAAQ;MAAAA,iBAAQ;MACtCA,6BAQE;MACFA,sEAUQ;MACVA,iBAAM;MAERA,gCAA0B;MAMtBA,yBACF;MAAAA,iBAAS;MACTA,mCAIC;MACCA,wBACF;MAAAA,iBAAS;;;MA1EXA,eAAuB;MAAvBA,yCAAuB;MA6BhBA,gBAAqD;MAArDA,kFAAqD;MAmBrDA,eAA8D;MAA9DA,2FAA8D;MAuBjEA,eAA8B;MAA9BA,gDAA8B","names":["FormControl","FormGroup","Validators","i0","LoginComponent","constructor","authService","email","password","_id","username","createdAt","updatedAt","required","minLength","onSubmit","user","loginForm","value","login","reset","closeButton","nativeElement","click","get","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["C:\\Users\\SoundIt\\Desktop\\Development\\unighana-test\\frontend\\src\\app\\components\\modals\\login\\login.component.ts","C:\\Users\\SoundIt\\Desktop\\Development\\unighana-test\\frontend\\src\\app\\components\\modals\\login\\login.component.html"],"sourcesContent":["import { Component, ElementRef, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { User } from 'src/app/interfaces/user';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent {\n  user: User = {\n    email: '',\n    password: '',\n    _id: '',\n    username: '',\n    createdAt: '',\n    updatedAt: ''\n  };\n\n  loginForm: FormGroup = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(8),\n    ]),\n  });\n\n  @ViewChild('closeButton') closeButton: ElementRef | undefined;\n\n  constructor(\n    private authService: AuthService,\n  ) {}\n\n  async onSubmit() {\n    this.user = this.loginForm.value;\n    await this.authService.login(this.user);\n    this.loginForm.reset();\n    this.closeButton?.nativeElement.click();\n  }\n\n  get email() {\n    return this.loginForm.get('email') as FormControl;\n  }\n\n  get password() {\n    return this.loginForm.get('password') as FormControl;\n  }\n}\n","<!-- Modal -->\n<div\n  class=\"modal fade\"\n  id=\"loginModal\"\n  tabindex=\"-1\"\n  aria-labelledby=\"loginModalLabel\"\n  aria-hidden=\"true\"\n>\n  <div class=\"modal-dialog modal-dialog-centered\">\n    <div class=\"modal-content\">\n      <form\n        [formGroup]=\"loginForm\"\n        (ngSubmit)=\"onSubmit()\"\n        class=\"needs-validation\"\n        novalidate\n      >\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"loginModalLabel\">Log in</h5>\n          <button\n            type=\"button\"\n            class=\"btn-close\"\n            data-bs-dismiss=\"modal\"\n            aria-label=\"Close\"\n            #closeButton\n          ></button>\n        </div>\n        <div class=\"modal-body\">\n          <div class=\"mb-3\">\n            <label for=\"email\">Email</label>\n            <input\n              type=\"email\"\n              class=\"form-control\"\n              id=\"email\"\n              formControlName=\"email\"\n              placeholder=\"\"\n              name=\"email\"\n              required\n            />\n\n            <small\n              *ngIf=\"email.invalid && (email.dirty || email.touched)\"\n              class=\"text-danger\"\n            >\n              <span *ngIf=\"email.errors?.['required']\">Email is required</span>\n              <span *ngIf=\"email.errors?.['email']\">Email is invalid</span>\n            </small>\n          </div>\n          <div class=\"mb-3\">\n            <label for=\"password\">Password</label>\n            <input\n              type=\"password\"\n              class=\"form-control\"\n              id=\"password\"\n              placeholder=\"\"\n              formControlName=\"password\"\n              name=\"password\"\n              required\n            />\n            <small\n              *ngIf=\"password.invalid && (password.dirty || password.touched)\"\n              class=\"text-danger\"\n            >\n              <span *ngIf=\"password.errors?.['required']\"\n                >Password is required</span\n              >\n              <span *ngIf=\"password.errors?.['minlength']\"\n                >Password must be at least 8 characters</span\n              >\n            </small>\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"actionBtn btn-secondary\"\n            data-bs-dismiss=\"modal\"\n          >\n            Cancel\n          </button>\n          <button\n            type=\"submit\"\n            class=\"actionBtn\"\n            [disabled]=\"loginForm.invalid\"\n          >\n            Login\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}